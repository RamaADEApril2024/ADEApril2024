{
	"name": "DF_Multiple_joins",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "emp_join2_ds",
						"type": "DatasetReference"
					},
					"name": "LeftTableEMP"
				},
				{
					"dataset": {
						"referenceName": "Dept_join2_DS",
						"type": "DatasetReference"
					},
					"name": "RightTableDEPT"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DF_emp_Output_filters",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MultipleJoins"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Emp_id as string,",
				"          Name as string,",
				"          Salary as string,",
				"          Dept as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LeftTableEMP",
				"source(output(",
				"          DEPARTMENT_ID as string,",
				"          COUNTRY as string,",
				"          DEPARTMENT_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> RightTableDEPT",
				"LeftTableEMP, RightTableDEPT join(Dept == DEPARTMENT_ID",
				"     && LeftTableEMP@Country == RightTableDEPT@COUNTRY,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> MultipleJoins",
				"MultipleJoins sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}