{
	"name": "DF_Lookup_testings",
	"properties": {
		"description": "we can filter row or last records based on two tables, and normally in one table we are doing by using row number",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_lookup_left",
						"type": "DatasetReference"
					},
					"name": "LookupLEFT"
				},
				{
					"dataset": {
						"referenceName": "DS_lookupRight",
						"type": "DatasetReference"
					},
					"name": "LookupRight"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DF_emp_Output_filters",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Empid as integer,",
				"          Name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LookupLEFT",
				"source(output(",
				"          Empid as integer,",
				"          Dept as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LookupRight",
				"LookupLEFT, LookupRight lookup(LookupLEFT@Empid == LookupRight@Empid,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(LookupRight@Empid, true),",
				"     asc(Dept, true),",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}